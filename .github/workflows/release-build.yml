name: Build

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
  
jobs:
  build:
    name: Build ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch:
          - aarch64_cortex-a53
#           - aarch64_cortex-a72
#           - aarch64_generic
#           - arm_arm1176jzf-s_vfp
#           - arm_arm926ej-s
#           - arm_cortex-a15_neon-vfpv4
#           - arm_cortex-a5_vfpv4
#           - arm_cortex-a7
#           - arm_cortex-a7_neon-vfpv4
#           - arm_cortex-a8_vfpv3
#           - arm_cortex-a9
#           - arm_cortex-a9_neon
#           - arm_cortex-a9_vfpv3-d16
#           - arm_fa526
#           - arm_mpcore
#           - arm_xscale
#           - i386_pentium-mmx
#           - i386_pentium4
#           - mips64_octeonplus
#           - mips_24kc
#           - mips_4kec
#           - mips_mips32
#           - mipsel_24kc
#           - mipsel_24kc_24kf
#           - mipsel_74kc
#           - mipsel_mips32
#           - x86_64

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: ÂàùÂßãÂåñÁºñËØëÁéØÂ¢É
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo timedatectl set-timezone Asia/Shanghai
          echo "FILE_DATE=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_ENV
        
      - name: Get v2ray-geodata
        run: |
          git clone https://github.com/sbwml/v2ray-geodata
          git clone https://github.com/Leslie-Wong/luci-app-passwall
          git clone https://github.com/kenzok8/small

      - name: SSHÈìæÊé•ÁÆ°ÁêÜ
        uses: P3TERX/ssh2actions@v1.0.0
        if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
        env:
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          
      - name: Building packages
        uses: sbwml/openwrt-gh-action-sdk@go1.20
        env:
          ARCH: ${{ matrix.arch }}-openwrt-22.03
          FEEDNAME: packages_ci
          PACKAGES: luci-app-passwall
          NO_REFRESH_CHECK: true

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.arch }}
          path: bin/packages/${{ matrix.arch }}/packages_ci/*.ipk
          
      - name: ÁîüÊàêreleaseÊ†áÁ≠æ
        id: tag
        run: |
          echo "release_tag=${{ env.FILE_DATE }}-${{ matrix.arch }}" >> $GITHUB_OUTPUT
          touch release.txt
          echo "üéâüéâüéâüéâüéâüéâüéâüéâ" >> release.txt
          echo "Áî±Ë°∑ÊÑüË∞¢ÊâÄÊúâ‰∏∫openwrtÊó†ÁßÅÂ•âÁåÆÁöÑÂ§ß‰Ω¨‰ª¨" >> release.txt
          echo "üì• Âõ∫‰ª∂‰∏ãËΩΩ" >> release.txt
          echo "status=success" >> $GITHUB_OUTPUT

      - name: ÂèëÂ∏ÉËá≥release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: "bin/packages/${{ matrix.arch }}/packages_ci/*.ipk"
          name: ${{ env.FILE_DATE }}-${{ matrix.arch }}
          tag_name: ${{ steps.tag.outputs.release_tag }}
          body_path: release.txt
        
#       - name: Upload packages
#         uses: ncipollo/release-action@v1
#         with:
#           token: ${{ secrets.workflow_token }}
#           allowUpdates: true
#           replacesArtifacts: true
#           artifacts: "bin/packages/${{ matrix.arch }}/packages_ci/*.ipk"
